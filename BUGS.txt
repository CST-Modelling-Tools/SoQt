=====================================================================

000 Adding an app-specific pushbutton to the SoQtExaminerViewer will
    make the left border too thin. Reproduce with this code:

        #include <Inventor/Qt/SoQt.h>
        #include <Inventor/Qt/viewers/SoQtExaminerViewer.h>
        #include <Inventor/nodes/SoCone.h>
        #include <qpushbutton.h>
        
        
        int
        main(int argc,  char ** argv)
        {
          QWidget * window = SoQt::init("");
        
          SoQtExaminerViewer * examinerviewer = new SoQtExaminerViewer(window);
          examinerviewer->setSceneGraph(new SoCone);
        
          QWidget * parent = examinerviewer->getAppPushButtonParent();
          QPushButton * button = new QPushButton(parent);
          examinerviewer->addAppPushButton(button);
        
          examinerviewer->show();
          SoQt::show(window);
          SoQt::mainLoop();
        
          delete examinerviewer;
          return 0;
        } 

    I see at least two problems in the SoQtFullViewer::buildLeftTrim()
    code: 1) it is always set to a fixed width of 30 pixels, 2) it is
    not size-updated when buttons are added.

=====================================================================

001 The simplest SoQtExaminerViewer example comes up with a canvas
    sized to be of almost zero dimensions:

    ----8<--- [snip] ---------8<--- [snip] ---------8<--- [snip] ---
    #include <Inventor/Qt/SoQt.h>
    #include <Inventor/Qt/viewers/SoQtExaminerViewer.h>
    #include <Inventor/nodes/SoCone.h>
    
    int
    main(int argc, char* argv[])
    {
      QWidget * mainwin = SoQt::init(argv[0]);
    
      SoQtExaminerViewer * viewer = new SoQtExaminerViewer(mainwin);
      viewer->setSceneGraph(new SoCone);
    
      SoQt::show(mainwin);
      SoQt::mainLoop();
    
      return 0;
    }
    ----8<--- [snip] ---------8<--- [snip] ---------8<--- [snip] ---


=====================================================================
