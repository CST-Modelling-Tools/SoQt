# Makefile.in generated automatically by automake 1.4i from Makefile.am.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../../../..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = @build_alias@
build_triplet = @build@
host_alias = @host_alias@
host_triplet = @host@
target_alias = @target_alias@
target_triplet = @target@
AMTAR = @AMTAR@
AS = @AS@
AWK = @AWK@
BUILD_WITH_MSVC = @BUILD_WITH_MSVC@
CC = @CC@
COMPONENTHEADER = @COMPONENTHEADER@
CONFIG = @CONFIG@
CPP = @CPP@
CXX = @CXX@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSUFFIX = @DSUFFIX@
EVENT = @EVENT@
EXEEXT = @EXEEXT@
GUI = @GUI@
Gui = @Gui@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LIBFLAGS = @LIBFLAGS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LT_AGE = @LT_AGE@
LT_CURRENT = @LT_CURRENT@
LT_REVISION = @LT_REVISION@
MAINT = @MAINT@
MOC = @MOC@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
SOQT_DOC_HTML = @SOQT_DOC_HTML@
SOQT_DOC_MAN = @SOQT_DOC_MAN@
SOQT_EXTRA_CPPFLAGS = @SOQT_EXTRA_CPPFLAGS@
SOQT_EXTRA_CXXFLAGS = @SOQT_EXTRA_CXXFLAGS@
SOQT_EXTRA_LDFLAGS = @SOQT_EXTRA_LDFLAGS@
SOQT_EXTRA_LIBS = @SOQT_EXTRA_LIBS@
SOQT_MAJOR_VERSION = @SOQT_MAJOR_VERSION@
SOQT_MICRO_VERSION = @SOQT_MICRO_VERSION@
SOQT_MINOR_VERSION = @SOQT_MINOR_VERSION@
SOQT_VERSION = @SOQT_VERSION@
SUFFIX = @SUFFIX@
UNIX2WINPATH = @UNIX2WINPATH@
VERSION = @VERSION@
WIDGET = @WIDGET@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
_am_include = @_am_include@
_am_quote = @_am_quote@
gui = @gui@
install_sh = @install_sh@
sim_ac_coin_configcmd = @sim_ac_coin_configcmd@
sim_ac_doxygen_exe = @sim_ac_doxygen_exe@
sim_ac_perl_exe = @sim_ac_perl_exe@
soqt_configure_date = @soqt_configure_date@
soqt_dox_build_dir = @soqt_dox_build_dir@
soqt_dox_src_dir = @soqt_dox_src_dir@
win_srcdir = @win_srcdir@

@BUILD_WITH_MSVC_TRUE@noinst_LIBRARIES = devices.lst
@BUILD_WITH_MSVC_FALSE@noinst_LTLIBRARIES = libSoQtDevices.la

INCLUDES = -I$(top_builddir)/src -I$(top_srcdir)/src
LIBS = 

# every built sourcefile
BUILT_SOURCES = \
	moc_SoQtDevice.cpp \
	moc_SoQtInputFocus.cpp \
	moc_SoQtKeyboard.cpp \
	moc_SoQtMouse.cpp \
	moc_SoQtSpaceball.cpp \
	moc_SoQtLinuxJoystick.cpp \
	spwinput_x11.cpp spwinput.h


# built sourcefiles that are to be included in any case
libSoQtDevicesBuiltSources = \
	moc_SoQtDevice.cpp \
	moc_SoQtInputFocus.cpp \
	moc_SoQtKeyboard.cpp \
	moc_SoQtMouse.cpp \
	moc_SoQtSpaceball.cpp \
	spwinput_x11.cpp spwinput.h


############################################################################
# automake conditional stuff

# if HAVE_JOYSTICK_LINUX
# libSoQtDevicesLinuxJoystickHeaders = \
#         SoQtLinuxJoystick.h
# 
# libSoQtDevicesLinuxJoystickSources = \
#         SoQtLinuxJoystick.cpp \
# 	moc_SoQtLinuxJoystick.cpp \
#         $(libSoQtDevicesLinuxJoystickHeaders)
# else
libSoQtDevicesLinuxJoystickHeaders = 
libSoQtDevicesLinuxJoystickSources = 

# endif
libSoQtDevicesConditionalSources = \
        $(libSoQtDevicesLinuxJoystickSources)


libSoQtDevicesConditionalHeaders = \
        $(libSoQtDevicesLinuxJoystickHeaders)



############################################################################
# libtool setup
libSoQtDevices_la_SOURCES = \
	SoQtDevice.cpp \
	SoQtDevice.h \
	SoQtInputFocus.cpp \
	SoQtInputFocus.h \
	SoQtKeyboard.cpp \
	SoQtKeyboard.h \
	SoQtMouse.cpp \
	SoQtMouse.h \
	SoQtSpaceball.cpp \
	SoQtSpaceball.h \
	$(libSoQtDevicesBuiltSources) \
	$(libSoQtDevicesConditionalSources)


# all the sources that are conditional
EXTRA_libSoQtDevices_la_SOURCES = \
	SoQtLinuxJoystick.h \
	SoQtLinuxJoystick.cpp \
	moc_SoQtLinuxJoystick.cpp



############################################################################
# custom setup
devices_lst_SOURCES = \
	SoQtDevice.cpp \
	SoQtDevice.h \
	SoQtInputFocus.cpp \
	SoQtInputFocus.h \
	SoQtKeyboard.cpp \
	SoQtKeyboard.h \
	SoQtMouse.cpp \
	SoQtMouse.h \
	SoQtSpaceball.cpp \
	SoQtSpaceball.h \
	$(libSoQtDevicesBuiltSources) \
	$(libSoQtDevicesConditionalSources)



############################################################################
libSoQtDevicesincdir = $(includedir)/Inventor/Qt/devices

libSoQtDevicesinc_HEADERS = \
	$(srcdir)/SoQtDevice.h \
	$(srcdir)/SoQtInputFocus.h \
	$(srcdir)/SoQtKeyboard.h \
	$(srcdir)/SoQtMouse.h \
	$(srcdir)/SoQtSpaceball.h \
	$(libSoQtDevicesConditionalHeaders)

subdir = src/Inventor/Qt/devices
mkinstalldirs = $(SHELL) $(top_srcdir)/cfg/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)

devices_lst_AR = $(AR) cru
devices_lst_LIBADD =
am_devices_lst_OBJECTS = SoQtDevice.$(OBJEXT) SoQtInputFocus.$(OBJEXT) \
	SoQtKeyboard.$(OBJEXT) SoQtMouse.$(OBJEXT) \
	SoQtSpaceball.$(OBJEXT) moc_SoQtDevice.$(OBJEXT) \
	moc_SoQtInputFocus.$(OBJEXT) moc_SoQtKeyboard.$(OBJEXT) \
	moc_SoQtMouse.$(OBJEXT) moc_SoQtSpaceball.$(OBJEXT) \
	spwinput_x11.$(OBJEXT)
devices_lst_OBJECTS = $(am_devices_lst_OBJECTS)
LTLIBRARIES = $(noinst_LTLIBRARIES)

libSoQtDevices_la_LDFLAGS =
libSoQtDevices_la_LIBADD =
am_libSoQtDevices_la_OBJECTS = SoQtDevice.lo SoQtInputFocus.lo \
	SoQtKeyboard.lo SoQtMouse.lo SoQtSpaceball.lo moc_SoQtDevice.lo \
	moc_SoQtInputFocus.lo moc_SoQtKeyboard.lo moc_SoQtMouse.lo \
	moc_SoQtSpaceball.lo spwinput_x11.lo
libSoQtDevices_la_OBJECTS = $(am_libSoQtDevices_la_OBJECTS)

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
depcomp = $(SHELL) $(top_srcdir)/cfg/depcomp
@AMDEP_TRUE@DEP_FILES = $(DEPDIR)/SoQtDevice.Plo $(DEPDIR)/SoQtDevice.Po \
@AMDEP_TRUE@	$(DEPDIR)/SoQtInputFocus.Plo \
@AMDEP_TRUE@	$(DEPDIR)/SoQtInputFocus.Po \
@AMDEP_TRUE@	$(DEPDIR)/SoQtKeyboard.Plo \
@AMDEP_TRUE@	$(DEPDIR)/SoQtKeyboard.Po \
@AMDEP_TRUE@	$(DEPDIR)/SoQtLinuxJoystick.Plo \
@AMDEP_TRUE@	$(DEPDIR)/SoQtMouse.Plo $(DEPDIR)/SoQtMouse.Po \
@AMDEP_TRUE@	$(DEPDIR)/SoQtSpaceball.Plo \
@AMDEP_TRUE@	$(DEPDIR)/SoQtSpaceball.Po \
@AMDEP_TRUE@	$(DEPDIR)/moc_SoQtDevice.Plo \
@AMDEP_TRUE@	$(DEPDIR)/moc_SoQtDevice.Po \
@AMDEP_TRUE@	$(DEPDIR)/moc_SoQtInputFocus.Plo \
@AMDEP_TRUE@	$(DEPDIR)/moc_SoQtInputFocus.Po \
@AMDEP_TRUE@	$(DEPDIR)/moc_SoQtKeyboard.Plo \
@AMDEP_TRUE@	$(DEPDIR)/moc_SoQtKeyboard.Po \
@AMDEP_TRUE@	$(DEPDIR)/moc_SoQtLinuxJoystick.Plo \
@AMDEP_TRUE@	$(DEPDIR)/moc_SoQtMouse.Plo \
@AMDEP_TRUE@	$(DEPDIR)/moc_SoQtMouse.Po \
@AMDEP_TRUE@	$(DEPDIR)/moc_SoQtSpaceball.Plo \
@AMDEP_TRUE@	$(DEPDIR)/moc_SoQtSpaceball.Po \
@AMDEP_TRUE@	$(DEPDIR)/spwinput_x11.Plo \
@AMDEP_TRUE@	$(DEPDIR)/spwinput_x11.Po
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXFLAGS = @CXXFLAGS@
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(devices_lst_SOURCES) $(libSoQtDevices_la_SOURCES) \
	$(EXTRA_libSoQtDevices_la_SOURCES)
HEADERS = $(libSoQtDevicesinc_HEADERS)

DIST_COMMON = $(libSoQtDevicesinc_HEADERS) Makefile.am Makefile.in
SOURCES = $(devices_lst_SOURCES) $(libSoQtDevices_la_SOURCES) $(EXTRA_libSoQtDevices_la_SOURCES)

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Inventor/Qt/devices/Makefile
Makefile: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && \
	  CONFIG_HEADERS= CONFIG_LINKS= \
	  CONFIG_FILES=$(subdir)/$@ $(SHELL) ./config.status

AR = ar

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
libSoQtDevices.la: $(libSoQtDevices_la_OBJECTS) $(libSoQtDevices_la_DEPENDENCIES)
	$(CXXLINK)  $(libSoQtDevices_la_LDFLAGS) $(libSoQtDevices_la_OBJECTS) $(libSoQtDevices_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@_am_include@ @_am_quote@$(DEPDIR)/SoQtDevice.Plo@_am_quote@
@AMDEP_TRUE@@_am_include@ @_am_quote@$(DEPDIR)/SoQtDevice.Po@_am_quote@
@AMDEP_TRUE@@_am_include@ @_am_quote@$(DEPDIR)/SoQtInputFocus.Plo@_am_quote@
@AMDEP_TRUE@@_am_include@ @_am_quote@$(DEPDIR)/SoQtInputFocus.Po@_am_quote@
@AMDEP_TRUE@@_am_include@ @_am_quote@$(DEPDIR)/SoQtKeyboard.Plo@_am_quote@
@AMDEP_TRUE@@_am_include@ @_am_quote@$(DEPDIR)/SoQtKeyboard.Po@_am_quote@
@AMDEP_TRUE@@_am_include@ @_am_quote@$(DEPDIR)/SoQtLinuxJoystick.Plo@_am_quote@
@AMDEP_TRUE@@_am_include@ @_am_quote@$(DEPDIR)/SoQtMouse.Plo@_am_quote@
@AMDEP_TRUE@@_am_include@ @_am_quote@$(DEPDIR)/SoQtMouse.Po@_am_quote@
@AMDEP_TRUE@@_am_include@ @_am_quote@$(DEPDIR)/SoQtSpaceball.Plo@_am_quote@
@AMDEP_TRUE@@_am_include@ @_am_quote@$(DEPDIR)/SoQtSpaceball.Po@_am_quote@
@AMDEP_TRUE@@_am_include@ @_am_quote@$(DEPDIR)/moc_SoQtDevice.Plo@_am_quote@
@AMDEP_TRUE@@_am_include@ @_am_quote@$(DEPDIR)/moc_SoQtDevice.Po@_am_quote@
@AMDEP_TRUE@@_am_include@ @_am_quote@$(DEPDIR)/moc_SoQtInputFocus.Plo@_am_quote@
@AMDEP_TRUE@@_am_include@ @_am_quote@$(DEPDIR)/moc_SoQtInputFocus.Po@_am_quote@
@AMDEP_TRUE@@_am_include@ @_am_quote@$(DEPDIR)/moc_SoQtKeyboard.Plo@_am_quote@
@AMDEP_TRUE@@_am_include@ @_am_quote@$(DEPDIR)/moc_SoQtKeyboard.Po@_am_quote@
@AMDEP_TRUE@@_am_include@ @_am_quote@$(DEPDIR)/moc_SoQtLinuxJoystick.Plo@_am_quote@
@AMDEP_TRUE@@_am_include@ @_am_quote@$(DEPDIR)/moc_SoQtMouse.Plo@_am_quote@
@AMDEP_TRUE@@_am_include@ @_am_quote@$(DEPDIR)/moc_SoQtMouse.Po@_am_quote@
@AMDEP_TRUE@@_am_include@ @_am_quote@$(DEPDIR)/moc_SoQtSpaceball.Plo@_am_quote@
@AMDEP_TRUE@@_am_include@ @_am_quote@$(DEPDIR)/moc_SoQtSpaceball.Po@_am_quote@
@AMDEP_TRUE@@_am_include@ @_am_quote@$(DEPDIR)/spwinput_x11.Plo@_am_quote@
@AMDEP_TRUE@@_am_include@ @_am_quote@$(DEPDIR)/spwinput_x11.Po@_am_quote@

distclean-depend:
	-rm -rf $(DEPDIR)

.cpp.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `test -f $< || echo '$(srcdir)/'`$<

.cpp.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`

.cpp.lo:
@AMDEP_TRUE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LTCXXCOMPILE) -c -o $@ `test -f $< || echo '$(srcdir)/'`$<
CXXDEPMODE = @CXXDEPMODE@
uninstall-info-am:
install-libSoQtDevicesincHEADERS: $(libSoQtDevicesinc_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libSoQtDevicesincdir)
	@list='$(libSoQtDevicesinc_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(INSTALL_HEADER) $$d$$p $(DESTDIR)$(libSoQtDevicesincdir)/$$f"; \
	  $(INSTALL_HEADER) $$d$$p $(DESTDIR)$(libSoQtDevicesincdir)/$$f; \
	done

uninstall-libSoQtDevicesincHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libSoQtDevicesinc_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(libSoQtDevicesincdir)/$$f"; \
	  rm -f $(DESTDIR)$(libSoQtDevicesincdir)/$$f; \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || etags $(ETAGS_ARGS) $$tags  $$unique $(LISP)

GTAGS:
	here=`CDPATH=: && cd $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $$here

distclean-tags:
	-rm -f TAGS ID

DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../../../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	$(mkinstalldirs) $(distdir)/$(srcdir)
	@for file in $(DISTFILES); do \
	  if test -f $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    $(mkinstalldirs) "$(distdir)/$$dir"; \
	  fi; \
	  if test -d $$d/$$file; then \
	    cp -pR $$d/$$file $(distdir) \
	    || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(LTLIBRARIES) $(HEADERS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(libSoQtDevicesincdir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES) stamp-h stamp-h[0-9]*

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLIBRARIES \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am: install-libSoQtDevicesincHEADERS

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-info-am uninstall-libSoQtDevicesincHEADERS

.PHONY: all all-am check check-am clean clean-generic clean-libtool \
	clean-noinstLIBRARIES clean-noinstLTLIBRARIES distclean \
	distclean-compile distclean-depend distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am info \
	info-am install install-am install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-libSoQtDevicesincHEADERS install-man install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool tags uninstall \
	uninstall-am uninstall-info-am \
	uninstall-libSoQtDevicesincHEADERS


devices.lst: Makefile $(devices_lst_OBJECTS)
	@echo "Linking devices.lst..."; \
	echo $(CC) /LST:devices.lst \
	  $(devices_lst_OBJECTS); \
	$(CC) /LST:devices.lst \
	  $(devices_lst_OBJECTS);

############################################################################

moc_SoQtDevice.cpp: $(srcdir)/SoQtDevice.h
	@( cd $(top_builddir); \
	   $(MAKE) src/Inventor/Qt/devices/moc_SoQtDevice.cpp )

moc_SoQtInputFocus.cpp: $(srcdir)/SoQtInputFocus.h
	@( cd $(top_builddir); \
	   $(MAKE) src/Inventor/Qt/devices/moc_SoQtInputFocus.cpp )

moc_SoQtKeyboard.cpp: $(srcdir)/SoQtKeyboard.h
	@( cd $(top_builddir); \
	   $(MAKE) src/Inventor/Qt/devices/moc_SoQtKeyboard.cpp )

moc_SoQtMouse.cpp: $(srcdir)/SoQtMouse.h
	@( cd $(top_builddir); \
	   $(MAKE) src/Inventor/Qt/devices/moc_SoQtMouse.cpp )

moc_SoQtSpaceball.cpp: $(srcdir)/SoQtSpaceball.h
	@( cd $(top_builddir); \
	   $(MAKE) src/Inventor/Qt/devices/moc_SoQtSpaceball.cpp )

moc_SoQtLinuxJoystick.cpp: $(srcdir)/SoQtLinuxJoystick.h
	@( cd $(top_builddir); \
	   $(MAKE) src/Inventor/Qt/devices/moc_SoQtLinuxJoystick.cpp )

spwinput.h: $(top_srcdir)/src/Inventor/Qt/common/spwinput.h.in
	@( cd $(top_builddir); $(MAKE) src/Inventor/Qt/devices/spwinput.h )

spwinput_x11.cpp: $(top_srcdir)/src/Inventor/Qt/common/spwinput_x11.cpp.in
	@( cd $(top_builddir); \
		$(MAKE) src/Inventor/Qt/devices/spwinput_x11.cpp )
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
